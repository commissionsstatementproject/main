{"version":3,"sources":["models/sheetHelper.js","models/Sheet.js","App/Report/Report.js","App/App.js","App/uploadHelper.js","index.js"],"names":["columnIndices","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","Sheet","fileReaderResult","Object","classCallCheck","this","_sheet","CSV","cellString","letter","replace","toLowerCase","number","columnIndex","rowIndex","parseInt","sanitizedLetter","map","row","Report","props","csvString","name","React","useEffect","window","print","sheet","quarter","getCell","nameIndex","getColumn","findIndex","nameInCell","rowNumber","variableTarget","concat","value4","value5","value6","value7","value8","value9","value10","value11","value12","value13","react_default","createElement","data-testid","readUploadedFileAsText","file","reader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsText","App","_React$useState","useState","_React$useState2","slicedToArray","setCsvString","_React$useState3","_React$useState4","salespersonName","setSalespersonName","_React$useState5","_React$useState6","setFile","Report_Report","Fragment","onSubmit","event","preventDefault","size","alert","then","fileString","type","accept","onChange","target","files","placeholder","value","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.c37f4d94.chunk.js","sourcesContent":["export const columnIndices = {\n  a: 0,\n  b: 1,\n  c: 2,\n  d: 3,\n  e: 4,\n  f: 5,\n  g: 6,\n  h: 7,\n  i: 8,\n  j: 9,\n  k: 10,\n  l: 11,\n  m: 12,\n  n: 13,\n  o: 14,\n  p: 15,\n  q: 16,\n  r: 17,\n  s: 18,\n  t: 19,\n  u: 20,\n  v: 21,\n  w: 22,\n  x: 23,\n  y: 24,\n  z: 25\n};\n","import { columnIndices } from \"./sheetHelper\";\nimport * as CSV from \"csv-string\";\n\nclass Sheet {\n  constructor(fileReaderResult) {\n    this._sheet = CSV.parse(fileReaderResult);\n  }\n\n  getCell(cellString) {\n    const letter = cellString.replace(/[^A-Za-z]/g, \"\").toLowerCase();\n    const number = cellString.replace(/[^0-9]/g, \"\");\n\n    const columnIndex = columnIndices[letter];\n    const rowIndex = parseInt(number) - 1;\n\n    return this._sheet[rowIndex][columnIndex];\n  }\n\n  getColumn(letter) {\n    const sanitizedLetter = letter.replace(/[^A-Za-z]/g, \"\").toLowerCase();\n    const columnIndex = columnIndices[sanitizedLetter];\n    return this._sheet.map(row => row[columnIndex]);\n  }\n\n  // parse() {\n  //   return {\n  //     quarter: this.getCell(\"E1\"),\n\n  //   };\n  // }\n}\n\nexport default Sheet;\n","import React from \"react\";\nimport Sheet from \"../../models/Sheet\";\n\nfunction Report(props) {\n  const { csvString, name } = props;\n\n  React.useEffect(() => window.print());\n\n  const sheet = new Sheet(csvString);\n  const quarter = sheet.getCell(\"E1\");\n  const namesColumn = sheet.getColumn(\"B\");\n\n  const nameIndex = namesColumn.findIndex(nameInCell => {\n    return nameInCell === name;\n  });\n  const rowNumber = parseInt(nameIndex) + 1;\n\n  const variableTarget = sheet.getCell(`D${rowNumber}`);\n  const value4 = sheet.getCell(`E${rowNumber}`);\n  const value5 = sheet.getCell(`O${rowNumber}`);\n  const value6 = sheet.getCell(`U${rowNumber}`);\n  const value7 = sheet.getCell(`F${rowNumber}`);\n  const value8 = sheet.getCell(`P${rowNumber}`);\n  const value9 = sheet.getCell(`V${rowNumber}`);\n  const value10 = sheet.getCell(`G${rowNumber}`);\n  const value11 = sheet.getCell(`Q${rowNumber}`);\n  const value12 = sheet.getCell(`W${rowNumber}`);\n  const value13 = sheet.getCell(`X${rowNumber}`);\n\n  return (\n    <div data-testid=\"statement\">\n      <h2>This is a demo!</h2>\n      <div>A sales person with this name was found on row {rowNumber}.</div>\n      <div>Quarter: {quarter}.</div>\n      <div>The demand team member's name is \"{name}\".</div>\n      <div>Their variable target is: \"{variableTarget}\".</div>\n      <div>Here is the table:</div>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Component</th>\n            <th>Component-Target-Compensation</th>\n            <th>Component-Achievement-Level</th>\n            <th>Payout Amount</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Country/Team</td>\n            <td>{value4}</td>\n            <td>{value5}</td>\n            <td>{value6}</td>\n          </tr>\n          <tr>\n            <td>Individual Revenue</td>\n            <td>{value7}</td>\n            <td>{value8}</td>\n            <td>{value9}</td>\n          </tr>\n          <tr>\n            <td>Individual Sales</td>\n            <td>{value10}</td>\n            <td>{value11}</td>\n            <td>{value12}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div>The total gross discretionary pay is {value13}</div>\n    </div>\n  );\n}\n\nexport default Report;\n","import React from \"react\";\nimport Report from \"./Report/Report\";\n\nimport { readUploadedFileAsText } from \"./uploadHelper\";\nwindow.readUploadedFileAsText = readUploadedFileAsText;\n\nfunction App() {\n  const [csvString, setCsvString] = React.useState(\"\");\n  const [salespersonName, setSalespersonName] = React.useState(\"\");\n  const [file, setFile] = React.useState(null);\n\n  function openFile(event) {\n    event.preventDefault();\n\n    if (!file) {\n      return;\n    } else if (file.size > 500000) {\n      alert(\"This file is HUGE! What are you trying to upload?\");\n      return;\n    }\n\n    window\n      .readUploadedFileAsText(file)\n      .then(fileString => setCsvString(fileString));\n  }\n\n  if (!csvString) {\n    return (\n      <React.Fragment>\n        <form onSubmit={openFile}>\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            data-testid=\"fileSelect\"\n            onChange={event => setFile(event.target.files[0])}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"salesperson name\"\n            data-testid=\"salesPersonName\"\n            onChange={event => setSalespersonName(event.target.value)}\n            value={salespersonName}\n          />\n          <input\n            type=\"submit\"\n            value=\"Generate Statement\"\n            data-testid=\"generateButton\"\n          />\n        </form>\n      </React.Fragment>\n    );\n  } else {\n    return <Report csvString={csvString} name={salespersonName} />;\n  }\n}\n\nexport default App;\n","export function readUploadedFileAsText(file) {\n  const reader = new FileReader();\n\n  return new Promise((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort();\n      reject(new DOMException(\"Problem parsing input file.\"));\n    };\n\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.readAsText(file);\n  });\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}