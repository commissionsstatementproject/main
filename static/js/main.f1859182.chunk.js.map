{"version":3,"sources":["models/sheetHelper.js","models/Sheet.js","App/Report/Report.js","App/App.js","index.js"],"names":["columnIndices","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","Sheet","fileReaderResult","Object","classCallCheck","this","_sheet","CSV","cellString","console","log","letter","replace","toLowerCase","number","columnIndex","rowIndex","parseInt","sanitizedLetter","map","row","handleClick","doc","jsPDF","text","push","autoTable","theme","margin","top","head","body","save","Report","props","csvString","name","sheet","quarter","getCell","nameIndex","getColumn","findIndex","nameInCell","rowNumber","variableTarget","concat","value4","value5","value6","value7","value8","value9","value10","value11","value12","value13","react_default","createElement","Fragment","onClick","App","_React$useState","React","useState","_React$useState2","slicedToArray","setCsvString","_React$useState3","_React$useState4","salespersonName","setSalespersonName","_React$useState5","_React$useState6","file","setFile","onSubmit","event","preventDefault","size","alert","reader","FileReader","onload","result","readAsText","type","accept","onChange","target","files","placeholder","value","Report_Report","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f1859182.chunk.js","sourcesContent":["export const columnIndices = {\n  a: 0,\n  b: 1,\n  c: 2,\n  d: 3,\n  e: 4,\n  f: 5,\n  g: 6,\n  h: 7,\n  i: 8,\n  j: 9,\n  k: 10,\n  l: 11,\n  m: 12,\n  n: 13,\n  o: 14,\n  p: 15,\n  q: 16,\n  r: 17,\n  s: 18,\n  t: 19,\n  u: 20,\n  v: 21,\n  w: 22,\n  x: 23,\n  y: 24,\n  z: 25\n};\n","import { columnIndices } from \"./sheetHelper\";\nimport * as CSV from \"csv-string\";\n\nclass Sheet {\n  constructor(fileReaderResult) {\n    this._sheet = CSV.parse(fileReaderResult);\n  }\n\n  getCell(cellString) {\n    console.log(cellString);\n\n    const letter = cellString.replace(/[^A-Za-z]/g, \"\").toLowerCase();\n    const number = cellString.replace(/[^0-9]/g, \"\");\n\n    const columnIndex = columnIndices[letter];\n    const rowIndex = parseInt(number) - 1;\n\n    return this._sheet[rowIndex][columnIndex];\n  }\n\n  getColumn(letter) {\n    const sanitizedLetter = letter.replace(/[^A-Za-z]/g, \"\").toLowerCase();\n    const columnIndex = columnIndices[sanitizedLetter];\n    return this._sheet.map(row => row[columnIndex]);\n  }\n\n  // parse() {\n  //   return {\n  //     quarter: this.getCell(\"E1\"),\n\n  //   };\n  // }\n}\n\nexport default Sheet;\n","import React from \"react\";\nimport Sheet from \"../../models/Sheet\";\nimport * as jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nfunction handleClick() {\n  const doc = new jsPDF();\n  const text = [\"Hello, world!\"];\n  text.push(\"some more text\");\n  doc.text(20, 20, text);\n  doc.autoTable({\n    theme: \"plain\",\n    margin: { top: 30 },\n    head: [[\"Name\", \"Happiness level\"]],\n    body: [\n      [\"David\", \"not happy\"],\n      [\"James\", \"very happy\"],\n      [\"Bilbo Baggins\", \"baggily happy\"]\n    ]\n  });\n  doc.text(20, 80, \"even more text\");\n  doc.save(\"report.pdf\");\n}\n\nfunction Report(props) {\n  const { csvString, name } = props;\n\n  if (csvString === \"\") {\n    return null;\n  } else {\n    const sheet = new Sheet(csvString);\n    const quarter = sheet.getCell(\"E1\");\n    const namesColumn = sheet.getColumn(\"B\");\n\n    const nameIndex = namesColumn.findIndex(nameInCell => {\n      return nameInCell === name;\n    });\n    const rowNumber = parseInt(nameIndex) + 1;\n\n    const variableTarget = sheet.getCell(`D${rowNumber}`);\n    const value4 = sheet.getCell(`E${rowNumber}`);\n    const value5 = sheet.getCell(`O${rowNumber}`);\n    const value6 = sheet.getCell(`U${rowNumber}`);\n    const value7 = sheet.getCell(`F${rowNumber}`);\n    const value8 = sheet.getCell(`P${rowNumber}`);\n    const value9 = sheet.getCell(`V${rowNumber}`);\n    const value10 = sheet.getCell(`G${rowNumber}`);\n    const value11 = sheet.getCell(`Q${rowNumber}`);\n    const value12 = sheet.getCell(`W${rowNumber}`);\n    const value13 = sheet.getCell(`X${rowNumber}`);\n\n    return (\n      <React.Fragment>\n        <h1>This is a demo!!!</h1>\n        <h3>Sales Incentive Variable Pay Earnings</h3>\n        <h3>A sales person with this name was found on row {rowNumber}</h3>\n        <h3>Quarter: {quarter}</h3>\n        <h3>Name: {name}</h3>\n        <h3>Variable target: {variableTarget}</h3>\n\n        <h3>Here is the table:</h3>\n\n        <table>\n          <tr>\n            <th>Component</th>\n            <th>Component-Target-Compensation</th>\n            <th>Component-Achievement-Level</th>\n            <th>Payout-Amount</th>\n          </tr>\n          <tr>\n            <td>Country/Team</td>\n            <td>{value4}</td>\n            <td>{value5}</td>\n            <td>{value6}</td>\n          </tr>\n          <tr>\n            <td>Individual-revenue</td>\n            <td>{value7}</td>\n            <td>{value8}</td>\n            <td>{value9}</td>\n          </tr>\n          <tr>\n            <td>Individual-sales</td>\n            <td>{value10}</td>\n            <td>{value11}</td>\n            <td>{value12}</td>\n          </tr>\n        </table>\n\n        <h4>The total gross discretionary pay is {value13}</h4>\n\n        <button onClick={handleClick}>Generate PDF</button>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Report;\n","import React from \"react\";\nimport Report from \"./Report/Report\";\n\nfunction App() {\n  const [csvString, setCsvString] = React.useState(\"\");\n  const [salespersonName, setSalespersonName] = React.useState(\"\");\n  const [file, setFile] = React.useState(null);\n\n  function openFile(event) {\n    event.preventDefault();\n\n    if (!file) {\n      return;\n    } else if (file.size > 500000) {\n      alert(\"This file is HUGE! What are you trying to upload?\");\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = function() {\n      setCsvString(reader.result);\n    };\n    reader.readAsText(file);\n  }\n\n  return (\n    <React.Fragment>\n      <form onSubmit={openFile}>\n        <input\n          type=\"file\"\n          accept=\".csv\"\n          onChange={event => setFile(event.target.files[0])}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"salesperson name\"\n          onChange={event => setSalespersonName(event.target.value)}\n          value={salespersonName}\n        />\n        <input type=\"submit\" value=\"Generate Report\" />\n      </form>\n\n      <Report csvString={csvString} name={salespersonName} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}